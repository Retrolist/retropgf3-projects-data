{
  "bio": "Decentralized and open-source Solidity contract source code verification service",
  "impactCategory": [
    "DEVELOPER_ECOSYSTEM",
    "END_USER_EXPERIENCE_AND_ADOPTION"
  ],
  "displayName": "Sourcify",
  "websiteUrl": "https://sourcify.dev",
  "applicant": {
    "address": {
      "address": "0x92347362ACc955A6f3Dc7F9D34945AAaC944FFBF",
      "resolvedName": {
        "address": "0x92347362ACc955A6f3Dc7F9D34945AAaC944FFBF",
        "name": "sourcify.eth"
      }
    },
    "id": "Delegate|Delegate|0x92347362ACc955A6f3Dc7F9D34945AAaC944FFBF"
  },
  "applicantType": "PROJECT",
  "profile": {
    "profileImageUrl": "https://content.optimism.io/profile/v0/profile-image/10/0x92347362ACc955A6f3Dc7F9D34945AAaC944FFBF.png",
    "bannerImageUrl": "https://content.optimism.io/profile/v0/banner-image/10/0x92347362ACc955A6f3Dc7F9D34945AAaC944FFBF.png",
    "id": "OptimistProfile|0x348f080a7897a54605c7487846932dcbf31ff587c2daf1681a005abd1bd4868e"
  },
  "impactDescription": "We are raising awareness on several fronts:\n- Easy and open access to verified smart contracts\n- Benefits of Solidity's contract metadata and its appended hash in the onchain bytecode\n- Centralization in source code verification tools and providing alternatives\n\nWe support 109 EVM chains, among those using OP Stack e.g. OP networks, and Base. We also \"monitor\" those networks to catch contract creations and verify automatically if the source code is published on IPFS.",
  "contributionDescription": "Sourcify provides an open-source alternative to existing proprietary source code verification tools for contracts\n\nAnyone can run their own Sourcify to trustlessly verify contracts. It's also a knowledge-gathering point for verification, whereas with close source tools, the learnings in verification and the exceptions that need to be handled are not shared with the community.\n\nThe data is open. You don't need to scrape to bulk download contracts. The contract repository is published to IPFS and S3 buckets regularly. \n\nSourcify also aims to foster the \"full matches\" with contract metadata hashes. This ensures cryptographic guarantees for the exactness of the contract. It's nicely demonstrated at playground.sourcify.dev.",
  "contributionLinks": [
    {
      "type": "GITHUB_REPO",
      "url": "https://github.com/ethereum/sourcify",
      "description": "Main Sourcify monorepo"
    },
    {
      "type": "GITHUB_REPO",
      "url": "https://github.com/sourcifyeth",
      "description": "Auxilliary repo"
    }
  ],
  "impactMetrics": [
    {
      "description": "Verified Contracts on OP Mainnet",
      "number": "2713",
      "url": "https://repo.sourcify.dev/stats.json"
    },
    {
      "description": "Verified Contracts on OP Goerli",
      "number": "3676",
      "url": "https://repo.sourcify.dev/stats.json"
    },
    {
      "description": "Verified Contracts on Base Testnet",
      "number": "46013",
      "url": "https://repo.sourcify.dev/stats.json"
    }
  ],
  "fundingSources": [
    {
      "type": "RETROPGF_2",
      "currency": "OP",
      "amount": 30.74366,
      "description": ""
    },
    {
      "type": "OTHER",
      "currency": "USD",
      "amount": 200000,
      "description": "(rough num) It's an Ethereum Foundation project. Main contributors EF employed"
    }
  ],
  "lists": [],
  "id": "Project|0x0cdf83271ae4293cc360b68edb92f4438ecf6d054ec1ec04a82fd7bd5b96c7ad",
  "prelimResult": "#N/A"
}